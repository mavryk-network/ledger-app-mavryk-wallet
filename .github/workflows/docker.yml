name: Build docker image for subsequent jobs, resuing where possible.

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to the dockerfile to be built'
        required: true
        type: string
      image_name:
        description: 'Name to give to the built docker image'
        required: true
        type: string
      checkout_submodules:
        description: 'Whether to checkout submodules'
        required: false
        default: false
        type: boolean
    outputs:
      image:
        value: ${{ jobs.build_docker.outputs.image }}

jobs:
  build_docker:
    name: Build docker image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.container_tag.outputs.tag }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Clear more space
        # See https://github.com/actions/runner-images/issues/2840
        # - otherwise the runner runs out of space when building the mavryk image
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo df -h

      - name: Checkout without submodules
        if: ${{ !inputs.checkout_submodules }}
        uses: actions/checkout@v3

      - name: Checkout with submodules
        if: ${{ inputs.checkout_submodules }}
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Branches ref
        id: branches
        shell: bash
        run: |
          echo "=== BRANCHES DEBUG ==="
          echo "github.head_ref: '${{ github.head_ref }}'"
          echo "github.base_ref: '${{ github.base_ref }}'"
          echo "github.ref: '${{ github.ref }}'"
          echo "GITHUB_BASE_REF: '$GITHUB_BASE_REF'"
          
          SOURCE=$(echo ${{ github.head_ref }} | cut -c -63 | sed -E 's/[^a-z0-9-]+/-/g' | sed -E 's/^-*([a-z0-9-]+[a-z0-9])-*$$/\1/g')
          TARGET=$(echo ${GITHUB_BASE_REF} | cut -c -63 | sed -E 's/[^a-z0-9-]+/-/g' | sed -E 's/^-*([a-z0-9-]+[a-z0-9])-*$$/\1/g')
          BRANCH=$(echo ${{ github.ref }} | perl -pE 's|.*?/.*?/||g' | cut -c -63 | sed -E 's/[^a-z0-9-]+/-/g' | sed -E 's/^-*([a-z0-9-]+[a-z0-9])-*$$/\1/g')
          
          echo "Processed values:"
          echo "  - source: '$SOURCE'"
          echo "  - target: '$TARGET'"
          echo "  - branch: '$BRANCH'"
          
          echo "source=$SOURCE" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Fetch branches
        run: |
          if [ ! -z ${{ steps.branches.outputs.target }} ]; then
            git fetch origin ${GITHUB_BASE_REF}
          else
            git fetch origin ${{ github.event.before }}
          fi
      - name: Container tag
        id: container_tag
        run: |
          echo "=== CONTAINER_TAG DEBUG ==="
          echo "Input values:"
          echo "  - DOCKER_REGISTRY: '${{ vars.DOCKER_REGISTRY }}'"
          echo "  - DOCKER_REPOSITORY: '${{ vars.DOCKER_REPOSITORY }}'"
          echo "  - image_name: '${{ inputs.image_name }}'"
          echo "Branches step outputs:"
          echo "  - source: '${{ steps.branches.outputs.source }}'"
          echo "  - target: '${{ steps.branches.outputs.target }}'"
          echo "  - branch: '${{ steps.branches.outputs.branch }}'"
          
          BASE=${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_REPOSITORY }}/${{ inputs.image_name }}
          echo "BASE: '$BASE'"
          
          if [ ! -z ${{ steps.branches.outputs.target }} ]; then
            echo "Using target branch logic (PR)"
            TAG="$BASE:${{ steps.branches.outputs.source }}"
            PREV_TAG="$BASE:${{ steps.branches.outputs.target }}"
          else
            echo "Using branch logic (push)"
            TAG="$BASE:${{ steps.branches.outputs.branch }}"
            PREV_TAG="$BASE:${{ steps.branches.outputs.branch }}"
          fi
          
          echo "Final values:"
          echo "  - tag: '$TAG'"
          echo "  - prev_tag: '$PREV_TAG'"
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
      - name: Dockerfile changed
        id: dockerfile
        run: |
          DIFF=""

          if [ -z "${GITHUB_BASE_REF}" ]; then
            DIFF="${{ github.event.before }}"
          else
            DIFF="origin/${GITHUB_BASE_REF}"
          fi

          if [ -n "$(git diff --name-only HEAD $DIFF -- ${{ inputs.dockerfile }})" ];
          then
            echo 'changed=True' >> $GITHUB_OUTPUT
          fi
      - name: Docker prev build
        id: docker_prev_build
        if: steps.dockerfile.outputs.changed != 'True'
        run: |
          if docker buildx imagetools create -t ${{ steps.container_tag.outputs.tag }} \
             ${{ steps.container_tag.outputs.prev_tag }} ;
          then
            echo 'Successfully synced image'
            echo 'exists=True' >> $GITHUB_OUTPUT
          fi
      - name: Build Testing docker image
        uses: docker/build-push-action@v4
        if: steps.dockerfile.outputs.changed == 'True' || steps.docker_prev_build.outputs.exists != 'True'
        with:
          context: docker/
          push: true
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.container_tag.outputs.tag }}
      
      - name: Debug final output
        run: |
          echo "=== DOCKER.YML DEBUG ==="
          echo "Final image tag: ${{ steps.container_tag.outputs.tag }}"
          echo "Job output will be: ${{ steps.container_tag.outputs.tag }}"
          echo "Raw tag value: '${{ steps.container_tag.outputs.tag }}'"
          echo "Tag length: ${#{{ steps.container_tag.outputs.tag }}}"
          echo "All step outputs:"
          echo "  - tag: '${{ steps.container_tag.outputs.tag }}'"
          echo "  - prev_tag: '${{ steps.container_tag.outputs.prev_tag }}'"
          echo "Job outputs that will be set:"
          echo "  - image: '${{ steps.container_tag.outputs.tag }}'"